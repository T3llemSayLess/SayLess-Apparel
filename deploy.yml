#!/usr/bin/env bash
set -euo pipefail
 IFS=$'\n\t'

# -------------------------
# Configuration
# -------------------------
REPO_NAME="${REPO_NAME:-SayLess-Apparel}"
REPO_DIR="${REPO_DIR:-$HOME/sayless_apparel}"
GITHUB_USER="${GITHUB_USER:-${GITHUB_USER:-}}"
GITHUB_TOKEN="${GITHUB_TOKEN:-${GITHUB_TOKEN:-}}"
LOG_FILE="${LOG_FILE:-$HOME/sayless_deploy.log}"
NODE_VERSION="${NODE_VERSION:-20}"
PYTHON_VERSION="${PYTHON_VERSION:-3.12}"
MAIN_BRANCH="${MAIN_BRANCH:-main}"

# Optional remote deploy details (for automatic authorized_keys install)
DEPLOY_HOST="${DEPLOY_HOST:-}"
DEPLOY_USER="${DEPLOY_USER:-}"
DEPLOY_PORT="${DEPLOY_PORT:-22}"

log() { printf '[%s] %s\n' "$(date '+%Y-%m-%d %H:%M:%S')" "$1" | tee -a "$LOG_FILE"; }

log "Starting GitHub-enabled SayLess deployment..."

# -------------------------
# Ensure base system packages (non-intrusive)
# -------------------------
if command -v apt >/dev/null 2>&1; then
  log "Updating apt packages (quiet)..."
  sudo apt update -y >/dev/null
fi

# -------------------------
# Ensure git present
# -------------------------
if ! command -v git >/dev/null 2>&1; then
  log "Installing git..."
  if command -v apt >/dev/null 2>&1; then
    sudo apt install -y git
  else
    log "Please install git manually for your distro; aborting."
    exit 1
  fi
fi

# -------------------------
# Install GitHub CLI (gh) if missing
# -------------------------
if ! command -v gh >/dev/null 2>&1; then
  log "Installing GitHub CLI (gh)..."
  if command -v apt >/dev/null 2>&1; then
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | \
      sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg >/dev/null 2>&1
    sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
      | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
    sudo apt update -y >/dev/null
    sudo apt install -y gh
  else
    log "Non-apt OS - attempting to install gh via curl installer..."
    curl -fsSL https://github.com/cli/cli/releases/latest/download/gh_$(uname -s)_$(uname -m).tar.gz -o /tmp/gh.tar.gz
    tar -xzf /tmp/gh.tar.gz -C /tmp && sudo cp /tmp/gh_*/*/bin/gh /usr/local/bin/gh
  fi
fi

# -------------------------
# GitHub auth (requires GITHUB_TOKEN in env)
# -------------------------
if [ -n "${GITHUB_TOKEN:-}" ]; then
  log "Authenticating gh using GITHUB_TOKEN..."
  printf '%s' "$GITHUB_TOKEN" | gh auth login --with-token >/dev/null
else
  log "GITHUB_TOKEN not set. You will be able to push only if gh already logged-in or you will be prompted later by gh."
fi

# -------------------------
# Create deployment directory and pull or clone repo
# -------------------------
mkdir -p "$REPO_DIR"
cd "$REPO_DIR" || exit 1
log "Deploy dir: $REPO_DIR (cwd: $(pwd))"

if [ ! -d ".git" ]; then
  log "No git repo found. Initializing..."
  git init
  # create a safe default main branch
  git checkout -b "$MAIN_BRANCH" || git branch -M "$MAIN_BRANCH"
fi

# If repo empty, create placeholder files so push succeeds
if [ -z "$(ls -A .)" ]; then
  log "Directory empty â€” creating starter files..."
  mkdir -p public src
  echo "# SayLess Apparel" > README.md
  cat > .gitignore <<'EOF'
node_modules
.env
.env.enc
.DS_Store
dist
__pycache__
*.pyc
EOF
  git add .
  git commit -m "chore: initial scaffold for SayLess Apparel" || true
fi

# -------------------------
# Create GitHub repo (if GITHUB_USER and token present)
# -------------------------
if [ -n "${GITHUB_USER:-}" ] && gh api user >/dev/null 2>&1; then
  FULL_REPO="${GITHUB_USER}/${REPO_NAME}"
  if ! gh repo view "$FULL_REPO" >/dev/null 2>&1; then
    log "Creating GitHub repo: $FULL_REPO (public)"
    gh repo create "$FULL_REPO" --public --confirm >/dev/null
  else
    log "GitHub repo $FULL_REPO already exists."
  fi

  # set remote and push
  if ! git remote | grep -q origin; then
    git remote add origin "git@github.com:${FULL_REPO}.git"
  fi

  # Ensure there is a commit to push
  if [ -z "$(git rev-parse --verify HEAD 2>/dev/null || true)" ]; then
    git add .
    git commit -m "initial commit" || true
  fi

  log "Pushing code to GitHub..."
  git push -u origin "$MAIN_BRANCH" --force
else
  log "GITHUB_USER or gh auth not available; skipping GitHub repo creation. If you want full automation, set GITHUB_USER and GITHUB_TOKEN."
fi
